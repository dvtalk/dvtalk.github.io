I".<h1 id="forcing-signals-with-questasimmodelsim">Forcing Signals with Questasim/ModelSim</h1>
<p class="fs-5 fw-500">I’ve been using vcs and questasim for verification for a while, and both of these tools allow us to interact with the simulator using their cli.
We can use them for debugging, create checking point, restore simulation, … .
But mostly for my case, I use this cli for forcing signals.
And this method help me in many situations such as creating some error cases (for testing purspose), or forcing signals from the logic that has not been implements yet.
Let’s go through some examples for forcing signals using Questasim (or another version of this eda tool is ModelSim).</p>

<hr />
<h2 id="how-to-force-signals">How to force signals</h2>
<p>As mentioned, we force signals using the interactive mode of those EDA tool, so whenever we in the command line interface (aka cli) we can call the force commands to force signals.
Usually, I create a file containing forcing commands, then source this file during simulation like below.</p>

<div class="code">

  <figure class="highlight"><pre><code class="language-bash" data-lang="bash">  vsim <span class="nt">-do</span> &lt;force_file.tcl&gt; &lt;other simulation options&gt;</code></pre></figure>

</div>

<p>For Questasim and VCS, these commands is the Tcl-based command, which means you will use tcl syntax for writting your force file.</p>

<hr />
<h2 id="some-examples-of-forcing-signals-using-questasim">Some examples of forcing signals using Questasim</h2>
<h3 id="first-up">First up</h3>
<ul>
  <li>Make sure your signals have correct path, you can find signal path by using Questasim cli command in cli mode:<code class="highlighter-rouge">find nets -recursive -ports /top/*TOP*/*MODULE_A*/*RESET*</code></li>
  <li>Check your tcl syntax carefully</li>
  <li>If you use force file like this: <code class="highlighter-rouge">vsim -do &lt;force_file.tcl&gt;</code>, considering using below template</li>
</ul>
<div class="code">

  <figure class="highlight"><pre><code class="language-bash" data-lang="bash">  <span class="c">#force_file.tcl</span>
  <span class="nb">echo</span> <span class="s2">"FORCE BEGIN"</span>
  <span class="c">#your force commands</span>
  <span class="nb">echo</span> <span class="s2">"FORCE END"</span>
  run <span class="nt">-all</span></code></pre></figure>

</div>

<h3 id="forcing-examples">Forcing Examples</h3>
<div>
<input type="text" class="tablefilterinput" id="FilterInput" onkeyup="tablefilter()" placeholder="Table filter input..." title="filter input" />

<table id="myTable">
   <tr>
      <th> Description </th>
      <th> Code </th>
   </tr>

   <tr>
      <td>
      forcing signals with fix value from certain simulation time
      </td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-tcl" data-lang="tcl">  when <span class="p">{</span> $now &gt; 1000ns <span class="p">}</span> <span class="p">{</span>
    force <span class="p">{</span>/top/U_MODULE_A/I_SIGNAL_A<span class="p">[</span>1:0<span class="p">]}</span> 10#3           
    force /top/U_MODULE_A/I_SIGNAL_B        1
  <span class="p">}</span>
      </code></pre></figure>

This means:
From 1000ns of simulation time, I_SIGNAL_A[1:0] will be 2'b11, I_SIGNAL_B will be 1'b1
      </div>
      </td>
   </tr>

   <tr>
      <td>
      forcing signal to be similar to other signal
      </td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-tcl" data-lang="tcl">  when <span class="p">{</span> /top/U_MODULE_A/I_CLK'event and $now &gt; 1000ns <span class="p">}</span> <span class="p">{</span>
    force /top/U_MODULE_A/I_SIGNAL_C <span class="p">[</span> examine /top/U_MODULE_A/I_CLK <span class="p">]</span>
  <span class="p">}</span>
      </code></pre></figure>

This means:
From 1000ns of simulation time, at every event of I_CLK (rising edge, falling edge), get the value of I_CLK (using examine command), and force the I_SIGNAL_C with that value
      </div>
      </td>
   </tr>

   <tr>
      <td>
      forcing signal to be a clock
      </td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-tcl" data-lang="tcl">  when <span class="p">{</span> top/U_MODULE_A/I_RESET_N'event and top/U_MODULE_A/I_RESET_N = 1  <span class="p">}</span> <span class="p">{</span>
     force top/U_MODULE_A/I_CLK_B 1 , 0 0.5 ns -r 1.0 ns
  <span class="p">}</span>
      </code></pre></figure>

This means:
When I_RESET_N changes value and the I_RESET_N has 1'b1 value, force the I_CLK_B to be 1, after 0.5ns force the I_CLK_B to be 0.
After 1ns from the moment I_CLK_B first forced to be 1, repeat the same sequence. Then we'll has I_CLK_B forced as a clock with 1ns clock cycle.
      </div>
      </td>
   </tr>

   <tr>
      <td>
      forcing signal when another signal active 1 the first time
      </td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-tcl" data-lang="tcl">  set flag_m 1
  when <span class="p">{</span> /top/U_MODULE_A/I_SIGNAL_E'event and /top/U_MODULE_A/I_SIGNAL_E = 1<span class="p">}</span> <span class="p">{</span>
    if <span class="p">{</span> $flag == 1  <span class="p">}</span> <span class="p">{</span>
      force /top/U_MODULE_A/I_SIGNAL_D 1
      set flag_m 0
    <span class="p">}</span>
  <span class="p">}</span>
      </code></pre></figure>

This means:
When I_SIGNAL_E change value to 1 the first time, force the I_SIGNAL_D to 1.
      </div>
      </td>
   </tr>

</table>

    <script>
      function tablefilter() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("FilterInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
          td = tr[i].getElementsByTagName("td")[0];
          if (td) {
            txtValue = td.textContent || td.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
              tr[i].style.display = "";
            } else {
              tr[i].style.display = "none";
            }
          }
        }
      }
    </script>
</div>

<hr />
<h2 id="finding-more-information">Finding more information</h2>
<p>Read the User Manual released by Questasim for more information and example on how to force signals.
The manual files usually can be found at the installation directory of each tool.
Besides, you could also refer the ModelSim PE manual. It’s a free download tool from Mentor for edutaion purpose and the commands are similar to Questasim.</p>
:ET