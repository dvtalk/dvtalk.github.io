I"	P<h1 id="stdrandomization-examples">std::randomization examples</h1>
<p class="fs-5 fw-500">Sometimes an example is just enough.
Honestly, I do search and copy a lot. It is simply because I cannot remember everything.
Sometimes I pay a lot of time to understand and get the code run perfectly and then completely forget about it after 1 year.
This post is to store some of systemverilog std::randomization examples that I created/collected, just for me to copy later. :D</p>
<hr />

<div>  
<input type="text" class="tablefilterinput" id="FilterInput" onkeyup="tablefilter()" placeholder="Table filter input..." title="filter input" />

<table id="myTable">
   <tr>
      <th> Description </th>
      <th> Code </th>
      <th> Link </th>
   </tr>
   <tr>
      <td> systemverilog std::randomization array with constrains on unique element, number of elements, array sum, constrains for each element value using foreach</td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">  <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> <span class="c1">// also works with queue d_array[$]</span>

  <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>                                
    <span class="k">unique</span> <span class="o">{</span><span class="n">d_array</span><span class="o">}</span><span class="p">;</span>
    <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">10</span><span class="p">;</span>
    <span class="n">d_array</span><span class="p">.</span><span class="n">sum</span>    <span class="o">==</span> <span class="mi">150</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">{</span>
      <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span>
      <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
      <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">i</span><span class="p">;</span>
    <span class="o">}</span> <span class="o">}</span><span class="p">;</span>
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/5nYm" title="std::randomization example for array/queue">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>

   <tr>
      <td> systemverilog std::randomization array using sum with</td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">    <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> <span class="c1">//also work with queue, try d_array[$]</span>

    <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
      <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">5</span><span class="p">;</span>
      <span class="n">d_array</span><span class="p">.</span><span class="n">sum</span><span class="p">()</span> <span class="k">with</span> <span class="p">(</span> <span class="n">item</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">?</span> <span class="n">item</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span>  <span class="o">==</span> <span class="mi">100</span><span class="p">;</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">{</span>
        <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">100</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
      <span class="o">}</span>
    <span class="o">}</span><span class="p">;</span>
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/5css" title="std::randomization example for array using sum with, and also inside">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>

   <tr>
      <td> systemverilog std::randomization using implication constraints</td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">    <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> 

    <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
      <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">3</span><span class="p">;</span>
      <span class="n">d_array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">-&gt;</span> <span class="n">d_array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">}</span><span class="p">;</span>
      <span class="n">d_array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">10</span> <span class="o">-&gt;</span> <span class="n">d_array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="o">}</span>
                         <span class="o">&amp;</span> <span class="n">d_array</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">}</span><span class="p">;</span>
    <span class="o">}</span><span class="p">;</span>     
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/39Hg" title="randomization example using implication constraint">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>

   <tr>
      <td> systemverilog std::randomization using condition constraints</td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">    <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> 

    <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
      <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">3</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="p">)</span> <span class="o">{</span>
        <span class="n">d_array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">}</span><span class="p">;</span>
      <span class="o">}</span>
      <span class="k">else</span> <span class="o">{</span>
        <span class="n">d_array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="o">}</span><span class="p">;</span>
        <span class="n">d_array</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">}</span><span class="p">;</span>
      <span class="o">}</span>
    <span class="o">}</span><span class="p">;</span>     
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/dQx" title="randomization example using condition constraint">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>

   <tr>
      <td> systemverilog std::randomization with multiple variables</td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">  <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> 
  <span class="kt">int</span> <span class="n">num</span><span class="p">;</span>

  <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">,</span> <span class="n">num</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
    <span class="n">num</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">100</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
    <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span>  <span class="o">==</span> <span class="mi">3</span><span class="p">;</span>
    <span class="n">d_array</span><span class="p">.</span><span class="n">sum</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="k">with</span> <span class="p">(</span> <span class="n">item</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="o">?</span> <span class="n">item</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">num</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">{</span>
      <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">100</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
    <span class="o">}</span>
  <span class="o">}</span><span class="p">;</span>     
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/f5g" title="std::randomization example with multiple variables">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>


   <tr>
      <td> systemverilog std::randomization with weight distribution</td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">  <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> 

  <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
    <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span>  <span class="o">==</span> <span class="mi">1000</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">{</span>
      <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">dist</span> <span class="o">{</span> <span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">50</span><span class="p">]</span><span class="o">:/</span><span class="mi">80</span><span class="p">,</span> <span class="p">[</span><span class="mi">51</span><span class="o">:</span><span class="mi">99</span><span class="p">]</span><span class="o">:/</span><span class="mi">20</span> <span class="o">}</span><span class="p">;</span>
    <span class="o">}</span>
  <span class="o">}</span><span class="p">;</span> <span class="c1">// 80% d_array element value will be in range [0:50]</span>
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/5HdN" title="std::randomization example with weight distribution">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>


   <tr>
      <td> systemverilog std::randomization with solve .. before </td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">  <span class="kt">int</span> <span class="n">d_array</span><span class="p">[];</span> 
  <span class="kt">int</span> <span class="n">num</span><span class="p">;</span>

  <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">,</span> <span class="n">num</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
    <span class="k">solve</span> <span class="n">num</span> <span class="k">before</span> <span class="n">d_array</span><span class="p">;</span>
    <span class="n">num</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">100</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
    <span class="n">d_array</span><span class="p">.</span><span class="nb">size</span><span class="p">()</span>  <span class="o">==</span> <span class="mi">3</span><span class="p">;</span>
    <span class="n">d_array</span><span class="p">.</span><span class="n">sum</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="k">with</span> <span class="p">(</span> <span class="n">item</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="o">?</span> <span class="n">item</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">num</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">{</span>
      <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">100</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
    <span class="o">}</span>
 <span class="o">}</span><span class="p">;</span>     
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/3fJD" title="std::randomization example with solve before">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>



   <tr>
      <td> systemverilog std::randomization with multi-dimensional array </td>
      <td>
      <div class="code">
      
<figure class="highlight"><pre><code class="language-verilog" data-lang="verilog">    <span class="kt">int</span> <span class="n">d_array</span> <span class="p">[</span><span class="mi">5</span><span class="p">][];</span> 
  
    <span class="n">std</span><span class="o">::</span><span class="n">randomize</span><span class="p">(</span><span class="n">d_array</span><span class="p">)</span> <span class="k">with</span> <span class="o">{</span>
          <span class="k">unique</span> <span class="o">{</span><span class="n">d_array</span><span class="o">}</span><span class="p">;</span>
          <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">{</span>
                  <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="nb">size</span><span class="p">()</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">1</span><span class="o">:</span><span class="mi">2</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
          <span class="o">}</span>
          <span class="k">foreach</span> <span class="p">(</span><span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">])</span> <span class="o">{</span>
                   <span class="n">d_array</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="k">inside</span> <span class="o">{</span><span class="p">[</span><span class="mi">0</span><span class="o">:</span><span class="mi">16</span><span class="p">]</span><span class="o">}</span><span class="p">;</span>
          <span class="o">}</span>
    <span class="o">}</span><span class="p">;</span>
      </code></pre></figure>

      </div>
      </td>
      <td>
      <a href="https://www.edaplayground.com/x/D4wU" title="std::randomization example with multi-dimensional array">
      <svg width="25" height="25" viewBox="0 -0.1 2 2" class="customsvg"> <use xlink:href="#svg-edaplay"></use></svg></a>
      </td>
   </tr>



</table>
    <script>
      function tablefilter() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("FilterInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
          td = tr[i].getElementsByTagName("td")[0];
          if (td) {
            txtValue = td.textContent || td.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
              tr[i].style.display = "";
            } else {
              tr[i].style.display = "none";
            }
          }
        }
      }
    </script>
</div>
:ET